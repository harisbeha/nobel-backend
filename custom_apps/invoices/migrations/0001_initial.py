# -*- coding: utf-8 -*-
# Generated by Django 1.11.13 on 2018-07-16 09:47
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import jsonfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_info_storage', jsonfield.fields.JSONField(blank=True, null=True)),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('address', models.TextField(max_length=500, verbose_name='Full building address')),
                ('type', models.IntegerField(choices=[(1, 'STANDALONE'), (2, 'MIXED_USE')], verbose_name='Type of property')),
                ('short_name', models.CharField(blank=True, max_length=255, null=True)),
                ('building_code', models.CharField(blank=True, max_length=255, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=10, null=True)),
                ('deice_rate', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='Cost per de-icing w/o tax')),
                ('deice_tax', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='Tax per de-icing')),
                ('plow_rate', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='Cost per plow w/o tax')),
                ('plow_tax', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='Tax per plow')),
                ('facility_manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DiscrepancyReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('author', models.CharField(max_length=100, verbose_name='author')),
                ('status', models.TextField(verbose_name='Discrepancy communication')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_info_storage', jsonfield.fields.JSONField(blank=True, null=True)),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('remission_address', models.TextField(blank=True, max_length=500, null=True, verbose_name='remission address')),
                ('storm_name', models.CharField(blank=True, max_length=255, null=True)),
                ('storm_date', models.DateField(blank=True, null=True, verbose_name='Report Date')),
                ('status', models.CharField(blank=True, choices=[('not_created', 'Safety Report - Initial'), ('safety_report', 'Closeout Report Generated'), ('preliminary_created', 'Preliminary Invoice - In Progress'), ('submitted', 'Invoice Submitted - In Review'), ('reviewed', 'Reviewed'), ('dispute', 'In Dispute'), ('finalized', 'Approved')], default='not_created', max_length=255, null=True)),
                ('dispute_status', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('weather_ready', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PrelimInvoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_info_storage', jsonfield.fields.JSONField(blank=True, null=True)),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('storm_name', models.CharField(blank=True, max_length=255, null=True)),
                ('event_start', models.DateField(blank=True, null=True)),
                ('event_end', models.DateField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RegionalAdmin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(max_length=100, verbose_name="Regional manager's company name")),
                ('system_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SafetyReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('inspection_date', models.DateField(blank=True, default='2017-12-09', help_text='Date of the safety check', null=True)),
                ('site_serviced', models.BooleanField(default=True, verbose_name='Site Serviced?')),
                ('safe_to_open', models.BooleanField(default=True, verbose_name='Safe to open site?')),
                ('safety_concerns', models.CharField(blank=True, max_length=255, null=True, verbose_name='Concerns/Extra Instructions')),
                ('haul_stack_status', models.IntegerField(blank=True, choices=[(0, 'NONE'), (1, 'NEEDS_STACKING'), (2, 'NEEDS_HAULING')], default=0, null=True, verbose_name='Snow hauling or stacking required?')),
                ('haul_stack_estimate', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8, null=True, verbose_name='Cost estimate for future snow hauling or stacking')),
                ('verify_weather', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('building', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='invoices.Building')),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='invoices.Invoice')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SafetyVisit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('inspection_date', models.DateField(blank=True, default='2017-12-09', help_text='Date of the safety check', null=True)),
                ('site_serviced', models.BooleanField(default=True, verbose_name='Site Serviced?')),
                ('safe_to_open', models.BooleanField(default=True, verbose_name='Safe to open site?')),
                ('safety_concerns', models.CharField(blank=True, max_length=255, null=True, verbose_name='Concerns/Extra Instructions')),
                ('haul_stack_status', models.IntegerField(blank=True, choices=[(0, 'NONE'), (1, 'NEEDS_STACKING'), (2, 'NEEDS_HAULING')], default=0, null=True, verbose_name='Snow hauling or stacking required?')),
                ('haul_stack_estimate', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8, null=True, verbose_name='Cost estimate for future snow hauling or stacking')),
                ('safety_report', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='invoices.SafetyReport')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_info_storage', jsonfield.fields.JSONField(blank=True, null=True)),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(max_length=100, verbose_name="Vendor's company name")),
                ('address', models.TextField(max_length=500, verbose_name='Full mailing address')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='invoices.RegionalAdmin')),
                ('system_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Service Provider',
            },
        ),
        migrations.CreateModel(
            name='VendorSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('const_a', models.IntegerField()),
                ('const_b', models.IntegerField()),
                ('vendor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='invoices.Vendor')),
            ],
            options={
                'verbose_name_plural': 'Vendor settings',
            },
        ),
        migrations.CreateModel(
            name='WeatherData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('storm_id', models.CharField(blank=True, max_length=100, null=True)),
                ('location_id', models.CharField(blank=True, max_length=100, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('precipitation_type', models.CharField(blank=True, max_length=100, null=True)),
                ('precipititation_description', models.CharField(blank=True, max_length=100, null=True)),
                ('total', models.CharField(blank=True, max_length=100, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('narrative', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='WeatherStation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('station_name', models.CharField(blank=True, max_length=255, null=True)),
                ('short_name', models.CharField(max_length=255)),
                ('short_description', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('zip_codes', models.CommaSeparatedIntegerField(blank=True, max_length=255, null=True)),
                ('nws_code', models.CharField(blank=True, max_length=255, null=True)),
                ('cst_reference', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('work_order_code', models.CharField(blank=True, max_length=255, null=True)),
                ('verify_weather', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('storm_name', models.CharField(blank=True, help_text='Name of the event for which work is being done in response', max_length=100, null=True)),
                ('is_discrepant', models.BooleanField(default=False)),
                ('building', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='invoices.Building')),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='invoices.Invoice')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkOrderID',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('work_order_code', models.CharField(max_length=255)),
                ('available', models.BooleanField(default=True)),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='invoices.Vendor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkVisit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('service_date', models.DateField(blank=True, help_text='Date the service was performed', null=True)),
                ('service_time', models.CharField(blank=True, choices=[('Midnight - 4 AM', 'Midnight - 4 AM'), ('4 AM - 8 AM', '4 AM - 8 AM'), ('8AM - Noon', '8 AM - Noon'), ('Noon - 4 PM', 'Noon - 4 PM'), ('4 PM - 8 PM', '4 PM - 8 PM'), ('8 PM - Midnight', '8 PM - Midnight')], help_text='Last time serviced', max_length=255, null=True)),
                ('num_plows', models.IntegerField(blank=True, choices=[(0, 0), (1, 1)], default=0, null=True, verbose_name='# Plows')),
                ('num_salts', models.IntegerField(blank=True, choices=[(0, 0), (1, 1), (2, 2)], default=0, null=True, verbose_name='# Salts')),
                ('failed_service', models.BooleanField(default=False, verbose_name='Service Failed?')),
                ('work_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='invoices.WorkOrder')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='preliminvoice',
            name='vendor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='invoices.Vendor'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='service_provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='invoices.Vendor'),
        ),
        migrations.AddField(
            model_name='discrepancyreport',
            name='work_order',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='invoices.WorkOrder'),
        ),
        migrations.AddField(
            model_name='building',
            name='service_provider',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor_locations', to='invoices.Vendor'),
        ),
        migrations.AddField(
            model_name='building',
            name='weather_station',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='invoices.WeatherStation'),
        ),
        migrations.CreateModel(
            name='DiscrepancyReportItemNWA',
            fields=[
            ],
            options={
                'verbose_name': 'Work Order',
                'abstract': False,
                'proxy': True,
                'indexes': [],
            },
            bases=('invoices.workorder',),
        ),
        migrations.CreateModel(
            name='DiscrepancyReportNWA',
            fields=[
            ],
            options={
                'verbose_name': 'Discrepancy Report',
                'abstract': False,
                'proxy': True,
                'indexes': [],
            },
            bases=('invoices.invoice',),
        ),
        migrations.CreateModel(
            name='DiscrepancyReviewVendor',
            fields=[
            ],
            options={
                'verbose_name': 'Discrepancy Review',
                'abstract': False,
                'proxy': True,
                'indexes': [],
            },
            bases=('invoices.workorder',),
        ),
        migrations.CreateModel(
            name='InvoiceVendor',
            fields=[
            ],
            options={
                'verbose_name': 'Invoice',
                'abstract': False,
                'proxy': True,
                'indexes': [],
            },
            bases=('invoices.invoice',),
        ),
        migrations.CreateModel(
            name='SafetyReportVendor',
            fields=[
            ],
            options={
                'verbose_name': 'Safety Report',
                'abstract': False,
                'proxy': True,
                'indexes': [],
            },
            bases=('invoices.invoice',),
        ),
        migrations.CreateModel(
            name='ServiceForecastItemNWA',
            fields=[
            ],
            options={
                'verbose_name': 'Invoice',
                'abstract': False,
                'proxy': True,
                'indexes': [],
            },
            bases=('invoices.safetyreport',),
        ),
        migrations.CreateModel(
            name='ServiceForecastNWA',
            fields=[
            ],
            options={
                'verbose_name': 'Initial Spend Forecast',
                'abstract': False,
                'proxy': True,
                'indexes': [],
            },
            bases=('invoices.invoice',),
        ),
        migrations.CreateModel(
            name='SubmittedInvoiceNWA',
            fields=[
            ],
            options={
                'verbose_name': 'Invoice',
                'abstract': False,
                'proxy': True,
                'indexes': [],
            },
            bases=('invoices.invoice',),
        ),
    ]
